(ns carlos.core
  (:require [reagent.core :as r]
            [carlos.svg :refer [illustration]]
            [dommy.core :refer-macros [sel1]]))

(def config (r/atom {:seed       (rand-int 1e7)
                     :complexity 10
                     :animation  true}))

(defn set-seed! [s]
  (swap! config #(assoc % :seed s))
  (-> (sel1 :#seed)
      (.-value)
      (set! s))
  (println "Seed set to" (:seed @config)))

(defn seed-changed! []
  (-> (sel1 :#seed)
      (.-value)
      (set-seed!)))

(defn set-complexity! [c]
  (swap! config #(assoc % :complexity c))
  (println "Complexity set to" (:complexity @config)))

(defn set-animation! [c]
  (swap! config #(assoc % :animation c))
  (println "Animation set to" (:animation @config)))

;; -------------------------
;; Views

(defn home-page []
  [:div
   [:h1 "Carlos"]
   [:p
    "Autogenerated SVG illustrations inspired by "
    [:a {:href "https://en.wikipedia.org/wiki/Carlos_Cruz-Diez" :target "_blank"} "Carlos Cruz-Diez"]
    "' Physichromies. "
    [:a {:href "https://github.com/polymeris/carlos" :target "_blank"} "Code on Github"]
    "."]
   [:form
    [:label "Seed "
     [:input {:id            :seed
              :type          :number
              :default-value (:seed @config)
              :placeholder   "Seed"
              :on-change     seed-changed!}]
     [:button {:id       :random-seed
               :on-click #(let [seed (rand-int 1e7)]
                           (set-seed! seed)
                           (.preventDefault %))}
      "Randomize"]]
    [:label [:input {:id            :animate
                     :type          :checkbox
                     :on-change     #(set-animation! (-> (sel1 :#animate)
                                                         (.-checked)))
                     :checked (:animation @config)}]
     "Animate"]
    [:label [:input {:id            :avatar-sized
                     :type          :checkbox
                     :on-change     #(set-complexity! (if (-> (sel1 :#avatar-sized)
                                                              (.-checked)) 2 10))}]
     "Avatar complexity"]]
   [illustration @config]])

;; -------------------------
;; Initialize app

(defn mount-root []
  (r/render [home-page] (.getElementById js/document "app")))

(defn init! []
  (mount-root))
